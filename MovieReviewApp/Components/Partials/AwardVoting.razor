@using MovieReviewApp.Models
@using MovieReviewApp.Extensions

<div class="row">
    @if (!meetupPassed)
    {
        <!-- Voting Section -->
        <div class="col-md-6">
            <div class="card mb-3" style="background-color: var(--surface-color); border: 1px solid var(--border-color); color: var(--text-primary);">
                <div class="card-header" style="background-color: var(--surface-hover); border-bottom: 1px solid var(--border-color); color: var(--text-primary);">
                    <h5 class="mb-0" style="color: var(--text-primary);">Awards Voting</h5>
                </div>
                <div class="card-body">
                    @if (incompleteVoters.Any() && awardEvent != null)
                    {
                        <div class="alert mb-3" style="background-color: var(--warning-color); border: 1px solid var(--border-color); color: var(--text-primary); border-radius: 0.5rem; padding: 1rem;">
                            <h5 class="mb-2" style="color: var(--text-primary);">Waiting for votes from:</h5>
                            <div class="d-flex flex-wrap gap-2">
                                @foreach (var voter in incompleteVoters)
                                {
                                    var voteCount = voterVoteCounts.ContainsKey(voter.Name) ? voterVoteCounts[voter.Name] : 0;
                                    <span class="badge" style="background-color: var(--accent-orange); color: var(--text-primary); padding: 0.5rem; border-radius: 0.25rem;">
                                        @voter.Name (@voteCount/18)
                                    </span>
                                }
                            </div>
                        </div>
                    }

                    @if (string.IsNullOrEmpty(selectedUser))
                    {
                        <div class="mb-3">
                            <label for="userName" class="form-label">Enter your name to vote:</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="userName" @bind="tempUserName" @bind:event="oninput" />
                                <button class="btn btn-primary" @onclick="SetUser">Set Name</button>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="mb-3">
                            <div class="d-flex justify-content-between align-items-center">
                                <span>Logged in as: <strong>@selectedUser</strong></span>
                                <button class="btn btn-outline-danger btn-sm" @onclick="LogOut">Log Out</button>
                            </div>
                        </div>

                        @foreach (var question in questions)
                        {
                            <div class="mb-4 p-3 border rounded">
                                <h6 class="mb-3">@question.Question</h6>
                                @{
                                    var userVotes = GetUserVotesForQuestion(question.Id);
                                    var pointsForNextVote = remainingVotes.GetValueOrDefault(question.Id, 0);
                                }

                                <div class="mb-3">
                                    <h6 class="text-muted">Your Current Votes:</h6>
                                    @if (userVotes.Any())
                                    {
                                        <ul class="list-group">
                                            @foreach (var vote in userVotes.OrderByDescending(v => v.Points))
                                            {
                                                var movie = allMovies.FirstOrDefault(m => m.Id == vote.MovieEventId);
                                                var voteAge = DateTime.UtcNow - vote.CreatedAt;
                                                var canChange = awardSettings?.AllowVoteChanges == true &&
                                                (awardSettings.VoteChangeTimeLimit == 0 ||
                                                voteAge?.TotalHours <= awardSettings.VoteChangeTimeLimit);

                                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                                    <div>
                                                        <strong>@movie?.Movie</strong>
                                                        <span class="badge bg-primary ms-2">@vote.Points points</span>
                                                    </div>
                                                    @if (canChange)
                                                    {
                                                        <button class="btn btn-sm btn-outline-danger" @onclick="() => RemoveVote(question.Id, vote.Id)">
                                                            Remove
                                                        </button>
                                                    }
                                                </li>
                                            }
                                        </ul>
                                    }
                                    else
                                    {
                                        <p class="text-muted">No votes cast yet</p>
                                    }
                                </div>

                                @if (pointsForNextVote > 0)
                                {
                                    <div class="mb-3">
                                        <h6 class="text-muted">Cast Your Vote (@pointsForNextVote points):</h6>
                                        <select class="form-select" @bind="selectedMovies[question.Id]">
                                            <option value="@Guid.Empty">Select a movie...</option>
                                            @foreach (var movie in GetAvailableMoviesForQuestion(question.Id))
                                            {
                                                <option value="@movie.Id">@movie.Movie</option>
                                            }
                                        </select>
                                        <button class="btn btn-primary mt-2" 
                                                @onclick="() => CastVote(question.Id)"
                                                disabled="@(selectedMovies[question.Id] == Guid.Empty)">
                                            Cast Vote
                                        </button>
                                    </div>
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <!-- Results Section -->
        <div class="col-md-6">
            <div class="card" style="background-color: var(--surface-color); border: 1px solid var(--border-color); color: var(--text-primary);">
                <div class="card-header d-flex justify-content-between align-items-center" style="background-color: var(--surface-hover); border-bottom: 1px solid var(--border-color); color: var(--text-primary);">
                    <h5 class="mb-0" style="color: var(--text-primary);">Award Results</h5>
                    <button class="btn btn-outline-primary btn-sm" @onclick="ToggleResults">
                        @(showResults ? "Hide Results" : "Show Results")
                    </button>
                </div>
                <div class="card-body">
                    @if (showResults)
                    {
                        @foreach (var currentEvent in GetAllAwardEvents())
                        {
                            <div class="mb-4">
                                <h5 class="mb-3">@currentEvent.StartDate.ToLocalDisplay().ToString("MMMM yyyy")</h5>
                                @foreach (var question in questions)
                                {
                                    <div class="card mb-3" style="background-color: var(--surface-hover); border: 1px solid var(--border-color);">
                                        <div class="card-header d-flex justify-content-between align-items-center" style="background-color: var(--surface-color); border-bottom: 1px solid var(--border-color);">
                                            <h6 class="mb-0">@question.Question</h6>
                                            <button class="btn btn-sm btn-outline-primary" 
                                                    @onclick="() => ToggleEventResults(currentEvent.Id, question.Id, currentEvent.Id != awardEvent.Id)">
                                                @(IsEventResultShowing(currentEvent.Id, question.Id, currentEvent.Id != awardEvent.Id) ? "Hide" : "Show")
                                            </button>
                                        </div>
                                        @if (IsEventResultShowing(currentEvent.Id, question.Id, currentEvent.Id != awardEvent.Id))
                                        {
                                            <div class="card-body">
                                                @foreach (var result in GetQuestionResults(currentEvent.Id, question.Id).Result)
                                                {
                                                    var percentage = (result.TotalPoints / (float)totalPossiblePoints) * 100;
                                                    <div class="mb-3">
                                                        <div class="d-flex justify-content-between">
                                                            <strong>@result.MovieTitle</strong>
                                                            <span>@result.TotalPoints points</span>
                                                        </div>
                                                        <div class="progress" style="height: 25px; background-color: var(--background-secondary); border-radius: 0.5rem;">
                                                            <div class="progress-bar" 
                                                                 role="progressbar" 
                                                                 style="width: @percentage%; background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary)); color: var(--text-primary); border-radius: 0.5rem;">
                                                                @percentage.ToString("F1")%
                                                            </div>
                                                        </div>
                                                        <small class="text-muted">
                                                            (@result.FirstPlaceVotes first, @result.SecondPlaceVotes second, @result.ThirdPlaceVotes third)
                                                        </small>
                                                    </div>
                                                }
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="col-12">
            <div class="alert alert-info">
                The voting period for this meetup has ended.
            </div>
        </div>
    }
</div>
