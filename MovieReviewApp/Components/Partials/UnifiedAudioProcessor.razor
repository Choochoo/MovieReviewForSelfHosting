@using MovieReviewApp.Models
@using System.Globalization
@using System.Text.RegularExpressions
@using MovieReviewApp.Enums
@using Microsoft.AspNetCore.Components.Forms
@implements IDisposable

<div class="container-fluid">
    <div class="row">
        <div class="col-12 d-flex justify-content-between align-items-center mb-4">
            <h3 class="mb-0">🎬 Audio Processing</h3>
            <button class="btn btn-danger" @onclick="ShowPurgeModal">
                <i class="bi bi-exclamation-triangle"></i> Purge Gladia Data
            </button>
        </div>
    </div>

    @if (selectedSession == null)
    {
        <!-- Session Selection/Creation -->
        <div class="row">
            <div class="col-lg-8 mx-auto">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">Select or Create Session</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <!-- Create New Session -->
                            <div class="col-md-6">
                                <h6>Create New Session</h6>
                                <div class="mb-3">
                                    <label class="form-label">Select Movie</label>
                                    <select class="form-select" @onchange="OnMovieSelected">
                                        <option value="">-- Select a movie --</option>
                                        @if (availableMovies != null)
                                        {
                                            @foreach (var movie in availableMovies)
                                            {
                                                <option value="@movie.Id">
                                                    @movie.Movie - (@movie.StartDate.ToString("MMMM yyyy"))
                                                </option>
                                            }
                                        }
                                    </select>
                                </div>
                                
                                <div class="mb-3">
                                    <ParticipantAssignment 
                                        @bind-MicAssignments="micAssignments"
                                        @bind-PresentSpeakers="presentSpeakers" />
                                </div>

                                <div class="mb-3">
                                    <div class="border border-2 border-dashed rounded p-4 text-center">
                                        <InputFile OnChange="@LoadFiles" multiple accept=".mp3,.wav,.ogg,.aac,.m4a,.mp4,.mov,.avi,.mkv" class="form-control" />
                                        <p class="mt-2 mb-0 text-muted">
                                            <i class="bi bi-cloud-upload"></i> Drop files here or click to browse
                                        </p>
                                    </div>
                                </div>

                                @if (!string.IsNullOrEmpty(errorMessage))
                                {
                                    <div class="alert alert-danger">
                                        <i class="bi bi-exclamation-triangle"></i> @errorMessage
                                    </div>
                                }

                                @if (uploadedFiles.Any())
                                {
                                    <div class="mt-3 mb-3">
                                        <div class="d-flex justify-content-between align-items-center mb-2">
                                            <h6>Selected Files (@uploadedFiles.Count files - @FormatBytes(uploadedFiles.Sum(f => f.FileSize)))</h6>
                                            @if (isProcessing && uploadedFiles.Any(f => f.ProcessingStatus == AudioProcessingStatus.Uploading))
                                            {
                                                <small class="text-muted">
                                                    Uploading files...
                                                </small>
                                            }
                                        </div>
                                        
                                        @if (isProcessing && uploadedFiles.Any(f => f.ProcessingStatus == AudioProcessingStatus.Uploading))
                                        {
                                            <div class="progress mb-3" style="height: 25px;">
                                                <div class="progress-bar progress-bar-striped progress-bar-animated bg-primary" 
                                                     role="progressbar" 
                                                     style="width: 50%;" 
                                                     aria-valuenow="50" 
                                                     aria-valuemin="0" 
                                                     aria-valuemax="100">
                                                    Uploading Files...
                                                </div>
                                            </div>
                                        }
                                        
                                        <div class="list-group">
                                            @foreach (var file in uploadedFiles)
                                            {
                                                <div class="list-group-item">
                                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                                        <div>
                                                            <strong>@file.FileName</strong>
                                                            <br><small class="text-muted">@FormatBytes(file.FileSize)</small>
                                                        </div>
                                                        <div class="d-flex align-items-center">
                                                            <span class="badge @GetStatusBadgeClass(file.ProcessingStatus) me-2">
                                                                @GetStatusIcon(file.ProcessingStatus) @GetStatusText(file.ProcessingStatus)
                                                            </span>
                                                            @if (!isProcessing)
                                                            {
                                                                <button class="btn btn-sm btn-outline-danger" @onclick="() => RemoveFile(file)">
                                                                    <i class="bi bi-x"></i>
                                                                </button>
                                                            }
                                                        </div>
                                                    </div>
                                                    @if (file.ProcessingStatus == AudioProcessingStatus.Uploading || file.ProgressPercentage > 0)
                                                    {
                                                        <div class="mb-1">
                                                            <small class="text-muted">@file.CurrentStep</small>
                                                        </div>
                                                        <div class="progress" style="height: 15px;">
                                                            <div class="progress-bar @GetProgressBarClass(file.ProcessingStatus)" 
                                                                 role="progressbar" 
                                                                 style="width: @file.ProgressPercentage%;" 
                                                                 aria-valuenow="@file.ProgressPercentage" 
                                                                 aria-valuemin="0" 
                                                                 aria-valuemax="100">
                                                                @file.ProgressPercentage%
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }

                                <div class="mt-3">
                                    <button class="btn btn-primary w-100" 
                                            @onclick="CreateSessionAndConvert" 
                                            disabled="@(!CanCreateSession || isProcessing)"
                                            title="@GetStartButtonTooltip()">
                                        @if (isProcessing)
                                        {
                                            <span class="spinner-border spinner-border-sm me-1"></span>
                                            @if (uploadedFiles.Any(f => f.ProcessingStatus == AudioProcessingStatus.Uploading))
                                            {
                                                <span>Uploading Files...</span>
                                            }
                                            else
                                            {
                                                <span>Processing...</span>
                                            }
                                        }
                                        else
                                        {
                                            <text><i class="bi bi-play-circle"></i> Start Processing</text>
                                        }
                                    </button>
                                    <small class="text-muted d-block mt-1">@GetSessionState()</small>
                                </div>
                            </div>

                            <!-- Load Existing Session -->
                            <div class="col-md-6">
                                <h6>Load Existing Session (@existingSessions.Count sessions found)</h6>
                                @if (existingSessions.Any())
                                {
                                    <div class="list-group">
                                        @foreach (var session in existingSessions.Take(10))
                                        {
                                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                                <div>
                                                    <h6 class="mb-1">@session.MovieTitle</h6>
                                                    <small class="text-muted">
                                                        @session.Date.ToString("MMM dd, yyyy") • @session.AudioFiles.Count files
                                                        <span class="badge @GetSessionStatusBadgeClass(session.Status) ms-2">@session.Status</span>
                                                    </small>
                                                </div>
                                                <div class="btn-group">
                                                    <button class="btn btn-sm btn-primary" @onclick="() => LoadSession(session)">
                                                        Load
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteSession(session)" 
                                                            @onclick:preventDefault="true">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-info">
                                        <i class="bi bi-info-circle"></i> No existing sessions found. Process some files first to create sessions that can be loaded later.
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Session Processing View -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">🎬 @selectedSession.MovieTitle - @selectedSession.Date.ToString("MMM dd, yyyy")</h5>
                        <div>
                            <button class="btn btn-sm btn-light me-2" @onclick="SaveSession" disabled="@isSaving">
                                @if (isSaving)
                                {
                                    <span class="spinner-border spinner-border-sm me-1"></span>
                                }
                                <i class="bi bi-save"></i> Save
                            </button>
                            <button class="btn btn-sm btn-outline-light" @onclick="BackToSelection">
                                <i class="bi bi-arrow-left"></i> Back to Setup
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (selectedSession.AudioFiles.Any())
                        {
                            <!-- Processing Table -->
                            <div class="table-responsive" style="overflow: visible;">
                                <table class="table table-hover" style="overflow: visible;">
                                    <thead>
                                        <tr>
                                            <th style="width: 25%">File</th>
                                            <th style="width: 15%">Status</th>
                                            <th style="width: 35%">Progress</th>
                                            <th style="width: 15%">Actions</th>
                                            <th style="width: 10%">Details</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var file in selectedSession.AudioFiles)
                                        {
                                            <tr class="@GetRowClass(file.ProcessingStatus)">
                                                <td>
                                                    <div>
                                                        <strong>@file.FileName</strong>
                                                        <br><small class="text-muted">@FormatBytes(file.FileSize)</small>
                                                    </div>
                                                </td>
                                                <td>
                                                    <span class="badge @GetStatusBadgeClass(file.ProcessingStatus)">
                                                        @GetStatusIcon(file.ProcessingStatus) @GetStatusText(file.ProcessingStatus)
                                                    </span>
                                                </td>
                                                <td>
                                                    <div class="mb-1">
                                                        <small class="text-muted">@file.CurrentStep</small>
                                                    </div>
                                                    <div class="progress" style="height: 20px;">
                                                        <div class="progress-bar @GetProgressBarClass(file.ProcessingStatus)" 
                                                             role="progressbar" 
                                                             style="width: @file.ProgressPercentage%;" 
                                                             aria-valuenow="@file.ProgressPercentage" 
                                                             aria-valuemin="0" 
                                                             aria-valuemax="100">
                                                            @file.ProgressPercentage%
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    @if (IsInProgress(file.ProcessingStatus))
                                                    {
                                                        <button class="btn btn-sm btn-outline-warning" @onclick="() => CancelProcess(file)">
                                                            <i class="bi bi-stop"></i> Stop
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <div class="dropdown">
                                                            <button class="btn btn-sm btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                                                @GetActionButtonText(file.ProcessingStatus)
                                                            </button>
                                                            <ul class="dropdown-menu" style="position: absolute; z-index: 9999; transform: translateZ(0);">
                                                                @if (CanStartStep(file, AudioProcessingStatus.ConvertingToMp3))
                                                                {
                                                                    <li><a class="dropdown-item" @onclick="() => StartProcess(file, AudioProcessingStatus.ConvertingToMp3)">
                                                                        @(file.ProcessingStatus >= AudioProcessingStatus.ProcessedMp3 ? "Re-convert to MP3" : "Convert to MP3")
                                                                    </a></li>
                                                                }
                                                                @if (CanStartStep(file, AudioProcessingStatus.UploadingToGladia))
                                                                {
                                                                    <li><a class="dropdown-item" @onclick="() => StartProcess(file, AudioProcessingStatus.UploadingToGladia)">
                                                                        @(file.ProcessingStatus >= AudioProcessingStatus.UploadedToGladia ? "Re-upload to Gladia" : "Upload to Gladia")
                                                                    </a></li>
                                                                }
                                                                @if (CanStartStep(file, AudioProcessingStatus.Transcribing))
                                                                {
                                                                    <li><a class="dropdown-item" @onclick="() => StartProcess(file, AudioProcessingStatus.Transcribing)">
                                                                        @(file.ProcessingStatus >= AudioProcessingStatus.TranscriptionComplete ? "Re-transcribe" : "Start Transcription")
                                                                    </a></li>
                                                                }
                                                                @if (CanStartStep(file, AudioProcessingStatus.ProcessingWithAI))
                                                                {
                                                                    <li><a class="dropdown-item" @onclick="() => file.ProcessingStatus >= AudioProcessingStatus.Complete ? RerunAIAnalysis(file) : StartProcess(file, AudioProcessingStatus.ProcessingWithAI)">
                                                                        @(file.ProcessingStatus >= AudioProcessingStatus.Complete ? "Re-run AI Analysis" : "Run AI Analysis")
                                                                    </a></li>
                                                                }
                                                                @if (file.ProcessingStatus == AudioProcessingStatus.Complete)
                                                                {
                                                                    <li><hr class="dropdown-divider"></li>
                                                                    <li><a class="dropdown-item" @onclick="() => StartFullProcessing(file)">
                                                                        <i class="bi bi-arrow-clockwise"></i> Restart Full Process
                                                                    </a></li>
                                                                }
                                                            </ul>
                                                        </div>
                                                    }
                                                </td>
                                                <td>
                                                    <button class="btn btn-sm btn-outline-info" data-bs-toggle="collapse" data-bs-target="#details-@file.FileName.Replace(".", "-")">
                                                        <i class="bi bi-info-circle"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                            <!-- Expandable Details Row -->
                                            <tr class="collapse" id="details-@file.FileName.Replace(".", "-")">
                                                <td colspan="5">
                                                    <div class="card card-body bg-light">
                                                        <div class="row">
                                                            <div class="col-md-6">
                                                                <strong>Processing Details:</strong>
                                                                <ul class="mb-2">
                                                                    <li>File Path: <code>@file.FilePath</code></li>
                                                                    <li>Speaker: @(file.SpeakerNumber?.ToString() ?? "Unknown")</li>
                                                                    <li>Master Recording: @(file.IsMasterRecording ? "Yes" : "No")</li>
                                                                    <li>Last Updated: @file.LastUpdated.ToString("HH:mm:ss")</li>
                                                                </ul>
                                                            </div>
                                                            <div class="col-md-6">
                                                                @if (!string.IsNullOrEmpty(file.ConversionError))
                                                                {
                                                                    <strong class="text-danger">Error:</strong>
                                                                    <p class="text-danger">@file.ConversionError</p>
                                                                }
                                                                @if (!string.IsNullOrEmpty(file.TranscriptText))
                                                                {
                                                                    <strong>Transcript Preview:</strong>
                                                                    <p class="small text-muted">@(file.TranscriptText.Length > 200 ? file.TranscriptText.Substring(0, 200) + "..." : file.TranscriptText)</p>
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                            <!-- Bulk Actions -->
                            <div class="row mt-4">
                                <div class="col-md-6">
                                    <h6>Process Files</h6>
                                    <div class="dropdown">
                                        <button class="btn btn-success dropdown-toggle" type="button" id="processDropdown" data-bs-toggle="dropdown" aria-expanded="false" disabled="@isProcessing">
                                            <i class="bi bi-play-circle"></i> Process All Files From...
                                        </button>
                                        <ul class="dropdown-menu" aria-labelledby="processDropdown">
                                            <li><a class="dropdown-item" @onclick="() => StartBulkProcessing(AudioProcessingStatus.ConvertingToMp3)">
                                                <i class="bi bi-file-music"></i> Start from WAV → MP3 Conversion
                                            </a></li>
                                            <li><a class="dropdown-item" @onclick="() => StartBulkProcessing(AudioProcessingStatus.UploadingToGladia)">
                                                <i class="bi bi-cloud-upload"></i> Start from Upload to Gladia
                                            </a></li>
                                            <li><a class="dropdown-item" @onclick="() => StartBulkProcessing(AudioProcessingStatus.Transcribing)">
                                                <i class="bi bi-mic"></i> Start from Transcription
                                            </a></li>
                                            <li><a class="dropdown-item" @onclick="() => StartBulkProcessing(AudioProcessingStatus.ProcessingWithAI)">
                                                <i class="bi bi-robot"></i> Start from AI Analysis
                                            </a></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="col-md-6 text-end">
                                    <h6>Session Progress</h6>
                                    <div class="progress" style="height: 30px;">
                                        <div class="progress-bar bg-success" 
                                             role="progressbar" 
                                             style="width: @GetOverallProgress()%;">
                                            @GetOverallProgress()% Complete
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle"></i> No audio files found in this session.
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Gladia Purge Modal - DANGER -->
    @if (showPurgeModal)
    {
        <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content border-danger">
                    <div class="modal-header bg-danger text-white">
                        <h5 class="modal-title">
                            <i class="bi bi-exclamation-octagon-fill"></i> DANGER: Purge All Gladia Data
                        </h5>
                        <button type="button" class="btn-close btn-close-white" @onclick="ClosePurgeModal"></button>
                    </div>
                    <div class="modal-body">
                        @if (purgeStep == PurgeStep.Initial)
                        {
                            <div class="alert alert-danger">
                                <h4 class="alert-heading">⚠️ EXTREME CAUTION REQUIRED</h4>
                                <p>This action will <strong>PERMANENTLY DELETE ALL</strong> audio transcriptions from your Gladia account.</p>
                                <hr>
                                <p class="mb-0">This includes:</p>
                                <ul>
                                    <li>All uploaded audio files</li>
                                    <li>All transcription results</li>
                                    <li>All processing history</li>
                                </ul>
                            </div>

                            <div class="bg-light p-3 rounded mb-3">
                                <h6>Why would you do this?</h6>
                                <ul class="mb-0">
                                    <li>Starting fresh with new processing</li>
                                    <li>Cleaning up test data</li>
                                    <li>Removing sensitive audio data</li>
                                    <li>Managing API usage limits</li>
                                </ul>
                            </div>

                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" @bind="understandRisks" id="understandCheck">
                                <label class="form-check-label text-danger" for="understandCheck">
                                    <strong>I understand this action is PERMANENT and CANNOT be undone</strong>
                                </label>
                            </div>

                            <button class="btn btn-danger w-100" @onclick="CheckGladiaData" disabled="@(!understandRisks)">
                                <i class="bi bi-search"></i> Check What Will Be Deleted
                            </button>
                        }
                        else if (purgeStep == PurgeStep.Checking)
                        {
                            <div class="text-center">
                                <div class="spinner-border text-danger" role="status">
                                    <span class="visually-hidden">Loading...</span>
                                </div>
                                <p class="mt-3">Checking Gladia account for existing data...</p>
                            </div>
                        }
                        else if (purgeStep == PurgeStep.Confirmation)
                        {
                            <div class="alert alert-warning">
                                <h5>Found @transcriptionCount Transcriptions</h5>
                                <p>The following data will be <strong>PERMANENTLY DELETED</strong>:</p>
                            </div>

                            @if (transcriptionsToDelete != null && transcriptionsToDelete.Any())
                            {
                                <div class="list-group mb-3" style="max-height: 300px; overflow-y: auto;">
                                    @foreach (var item in transcriptionsToDelete.Take(20))
                                    {
                                        <div class="list-group-item">
                                            <div class="d-flex justify-content-between">
                                                <strong>@(item.filename ?? "Unknown file")</strong>
                                                <span class="badge bg-secondary">@item.status</span>
                                            </div>
                                            <small class="text-muted">
                                                ID: @item.id | 
                                                Created: @item.created_at.ToString("MMM dd, yyyy HH:mm")
                                                @if (item.duration.HasValue)
                                                {
                                                    <text> | Duration: @TimeSpan.FromSeconds(item.duration.Value).ToString(@"mm\:ss")</text>
                                                }
                                            </small>
                                        </div>
                                    }
                                    @if (transcriptionsToDelete.Count > 20)
                                    {
                                        <div class="list-group-item text-center text-muted">
                                            ... and @(transcriptionsToDelete.Count - 20) more items
                                        </div>
                                    }
                                </div>
                            }

                            <div class="bg-danger text-white p-3 rounded mb-3">
                                <h6>⚠️ FINAL WARNING</h6>
                                <p class="mb-2">Type <code class="text-warning">DELETE ALL</code> to confirm:</p>
                                <input type="text" class="form-control" @bind="deleteConfirmation" placeholder="Type DELETE ALL here">
                            </div>

                            <div class="d-grid gap-2">
                                <button class="btn btn-danger" @onclick="ExecutePurge" 
                                        disabled="@(deleteConfirmation != "DELETE ALL" || isPurging)">
                                    @if (isPurging)
                                    {
                                        <span class="spinner-border spinner-border-sm me-2"></span>
                                        <text>Purging... DO NOT CLOSE THIS WINDOW</text>
                                    }
                                    else
                                    {
                                        <i class="bi bi-trash3-fill"></i>
                                        <text> Execute Purge - Delete Everything</text>
                                    }
                                </button>
                                <button class="btn btn-secondary" @onclick="ClosePurgeModal" disabled="@isPurging">
                                    Cancel - Keep My Data
                                </button>
                            </div>
                        }
                        else if (purgeStep == PurgeStep.Purging)
                        {
                            <div class="text-center">
                                <div class="spinner-border text-danger" role="status">
                                    <span class="visually-hidden">Purging...</span>
                                </div>
                                <h5 class="mt-3 text-danger">PURGING IN PROGRESS</h5>
                                <p>Deleting @purgeProgress of @transcriptionCount items...</p>
                                <div class="progress mt-3" style="height: 30px;">
                                    <div class="progress-bar bg-danger progress-bar-striped progress-bar-animated" 
                                         style="width: @((purgeProgress * 100.0 / transcriptionCount).ToString("F0"))%">
                                        @purgeProgress / @transcriptionCount
                                    </div>
                                </div>
                                <p class="mt-3 text-muted">DO NOT CLOSE THIS WINDOW OR NAVIGATE AWAY</p>
                            </div>
                        }
                        else if (purgeStep == PurgeStep.Complete)
                        {
                            @if (purgeResult != null)
                            {
                                <div class="alert @(purgeResult.TotalFailed > 0 ? "alert-warning" : "alert-success")">
                                    <h5>Purge Complete</h5>
                                    <p>Successfully deleted: <strong>@purgeResult.TotalDeleted</strong> items</p>
                                    @if (purgeResult.TotalFailed > 0)
                                    {
                                        <p class="text-danger">Failed to delete: <strong>@purgeResult.TotalFailed</strong> items</p>
                                    }
                                </div>

                                @if (purgeResult.FailedIds.Any())
                                {
                                    <details class="mb-3">
                                        <summary>Failed Items</summary>
                                        <ul>
                                            @foreach (var id in purgeResult.FailedIds)
                                            {
                                                <li><code>@id</code></li>
                                            }
                                        </ul>
                                    </details>
                                }

                                <button class="btn btn-primary w-100" @onclick="ClosePurgeModal">
                                    <i class="bi bi-check-circle"></i> Close
                                </button>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>
