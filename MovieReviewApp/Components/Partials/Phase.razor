@using MovieReviewApp.Models

@if (MovieEvent != null)
{
    try
    {
        <div class="card mb-3 @(MovieEvent.IsEditing ? "editing" : "")">
            <div class="card-body">
                <p style="text-align:center;font-size:1.2em">
                    @try
                    {
                        @MovieEvent.StartDate.ToString("MMMM yyyy")
                    }
                    catch
                    {
                        <span>Date not available</span>
                    }
                </p>
                <hr />
                @if (MovieEvent.IsEditing)
                {
                    try
                    {
                        <div><b>Person:</b> @MovieEvent.Person</div>
                        <div class="form-group">
                            <label><b>Movie: </b></label>
                            <input type="text" @bind="@MovieEvent.Movie" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label><b>IMDb: </b></label>
                            <input type="text" @bind="@MovieEvent.IMDb" class="form-control" />
                        </div>
                        <div class="form-group">
                            <ImageUpload @bind-ImageId="@MovieEvent.ImageId" 
                                       @bind-PosterUrl="@MovieEvent.PosterUrl" />
                        </div>
                        <div class="form-group">
                            <label><b>Reason:</b></label>
                            <div class="markdown-editor-container">
                                <ul class="nav nav-tabs mb-2">
                                    <li class="nav-item">
                                        <button class="nav-link @(showMarkdownPreview ? "" : "active")" type="button" @onclick="() => showMarkdownPreview = false">
                                            Edit
                                        </button>
                                    </li>
                                    <li class="nav-item">
                                        <button class="nav-link @(showMarkdownPreview ? "active" : "")" type="button" @onclick="() => showMarkdownPreview = true">
                                            Preview
                                        </button>
                                    </li>
                                </ul>
                                @if (showMarkdownPreview)
                                {
                                    <div class="markdown-preview form-control" style="min-height: 100px; height: auto;">
                                        @if (string.IsNullOrWhiteSpace(MovieEvent.Reasoning))
                                        {
                                            <span class="text-muted">Nothing to preview</span>
                                        }
                                        else
                                        {
                                            @((MarkupString)MovieEvent.Reasoning.Replace("\n", "<br/>"))
                                        }
                                    </div>
                                }
                                else
                                {
                                    <textarea placeholder="Your reason for choosing this film (supports Markdown formatting)" 
                                              @bind="@MovieEvent.Reasoning" 
                                              @bind:event="oninput"
                                              class="form-control"
                                              rows="15"></textarea>
                                    <small class="text-muted">Supports Markdown: **bold**, *italic*, [links](url), lists, etc.</small>
                                }
                            </div>
                            @if (PromptService.IsConfigured)
                            {
                                <div class="spice-up-container mt-2">
                                    <div class="form-check">
                                        <input type="checkbox" @bind="spiceItUp" class="form-check-input" id="spiceUpCheck" />
                                        <label class="form-check-label" for="spiceUpCheck">
                                            <strong>üå∂Ô∏è Spice it up!</strong>
                                        </label>
                                    </div>
                                    @if (spiceItUp)
                                    {
                                        <div class="mt-2">
                                            <select @bind="selectedStyle" class="form-control">
                                                <option value="">Select a style...</option>
                                                <option value="funner">Funner</option>
                                                <option value="dramatic">Dramatic</option>
                                                <option value="corporate chaos">Corporate Chaos</option>
                                                <option value="retro arcade">Retro Arcade</option>
                                                <option value="horror movie">Horror Movie</option>
                                                <option value="miami vice">Miami Vice</option>
                                                <option value="cyberpunk">Cyberpunk</option>
                                                <option value="wholesome">Wholesome</option>
                                                <option value="aggressive sales">Aggressive Sales</option>
                                                <option value="mystical wizard">Mystical Wizard</option>
                                                <option value="sports hype">Sports Hype</option>
                                                <option value="underwater dream">Underwater Dream</option>
                                            </select>
                                            @if (isSpicing)
                                            {
                                                <div class="text-muted mt-1">
                                                    <small>üé® Claude is spicing up your text...</small>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                        <div class="form-group">
                            <label><b>Meetup Time:</b></label>
                            <input type="datetime-local" @bind="MovieEvent.MeetupTime" class="form-control" step="3600" />
                        </div>
                        <div class="form-group">
                            <b>Have you already seen it?</b>
                            <input type="checkbox" @bind="@MovieEvent.AlreadySeen" class="form-check-input" />
                        </div>
                        @if (MovieEvent.AlreadySeen)
                        {
                            <div class="form-group">
                                <b>When?</b>
                                <select @bind="selectedYear" class="form-control">
                                    @foreach (var year in Enumerable.Range(1980, (DateProvider.Now.Year+1)-1980))
                                    {
                                        <option value="@year">@year</option>
                                    }
                                </select>
                            </div>
                        }
                        <button type="button" class="btn btn-primary" @onclick="SaveAsync" disabled="@(isLoading || isSpicing)">
                            @if (isSpicing)
                            {
                                <span>Saving...</span>
                            }
                            else
                            {
                                <span>Save</span>
                            }
                        </button>
                        <button type="button" class="btn btn-secondary" @onclick="Cancel" disabled="@(isLoading || isSpicing)">Cancel</button>
                    }
                    catch
                    {
                        <div class="alert alert-danger">
                            An error occurred while loading the edit form. Please try again.
                        </div>
                    }
                }
                else
                {
                    try
                    {
                        <div style="margin-left:10%;width:80%;text-align:center">
                            @if (string.IsNullOrEmpty(MovieEvent.Movie))
                            {
                                <span>@MovieEvent.Person's turn to choose.</span>
                            }
                            else
                            {
                                <span><b>@MovieEvent.Person</b> chose the movie <b>'@MovieEvent.Movie'</b></span>
                                @if (MovieEvent.SeenDate != null)
                                {
                                    try
                                    {
                                        <span> for the month of @MovieEvent.EndDate.AddDays(-1).ToString("MMMM")</span>
                                    }
                                    catch
                                    {
                                        <span> (month information unavailable)</span>
                                    }
                                }
                                if (MovieEvent.AlreadySeen && MovieEvent.SeenDate.HasValue)
                                {
                                    <span> and last saw it in @MovieEvent.SeenDate.Value.Year.</span>
                                }
                                else
                                {
                                    <span> and has never seen it before.</span>
                                }
                                @if (MovieEvent.MeetupTime.HasValue)
                                {
                                    try
                                    {
                                        <br />
                                        <br />
                                        <span>We will discuss at <b>@MovieEvent.Person's</b> on <b>@MovieEvent.MeetupTime?.ToString("dddd M/d/yyyy h:mm tt").</b></span>
                                    }
                                    catch
                                    {
                                        <span>Meetup time format error</span>
                                    }
                                }
                            }
                        </div>
                        <br />

                        @if (MovieEvent.ImageId.HasValue)
                        {
                            <div>
                                <img style="width:100%" src="/api/image/@MovieEvent.ImageId" onerror="this.style.display='none';this.nextElementSibling.style.display='flex';" />
                                <div style="display:none;width:100%;height:300px;background:#f8f9fa;border:2px dashed #ccc;align-items:center;justify-content:center;color:#6c757d;">
                                    <div style="text-align:center;">
                                        <i class="bi bi-film" style="font-size:3rem;margin-bottom:1rem;"></i>
                                        <br>No Poster Available
                                    </div>
                                </div>
                                <br />
                                <br />
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(MovieEvent.Reasoning))
                        {
                            <div class="reasoning-content" style="width:90%;margin-left:5%">
                                @((MarkupString)MovieEvent.Reasoning)
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(MovieEvent.Movie) && !string.IsNullOrEmpty(Synopsis))
                        {
                            <div>
                                <p style="text-align:justify; width:90%;margin-left:5%">&nbsp;&nbsp;&nbsp;&nbsp;<b>Synopsis:</b> @Synopsis</p>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(MovieEvent.IMDb))
                        {
                            <div>
                                <p style="text-align:justify; width:90%;margin-left:5%">IMDb: <a href="@MovieEvent.IMDb" target="_blank" rel="noopener noreferrer">Link</a></p>
                            </div>
                        }

                        @if (string.IsNullOrEmpty(MovieEvent.Movie))
                        {
                            <div style="text-align:center;width:100%">
                                <button type="button" style="background-color: blue; margin:20px" class="btn btn-secondary" @onclick="Edit">ADD MOVIE FOR @MovieEvent.StartDate.ToString("MMMM").ToUpper()</button>
                            </div>
                        }
                        else
                        {
                            <button type="button" class="btn btn-secondary" @onclick="Edit">Edit</button>
                        }
                    }
                    catch (Exception ex)
                    {
                        <div class="alert alert-danger">
                            An error occurred while displaying the movie information. Please refresh the page.
                        </div>
                    }
                }
            </div>
        </div>
    }
    catch (Exception ex)
    {
        <div class="alert alert-danger">
            An error occurred while loading the page. Please refresh to try again.
        </div>
    }
}
else
{
    <span>Loading...</span>
}

<style>
    .reasoning-content {
        text-align: justify;
    }

    .reasoning-content p {
        margin-bottom: 0.5rem;
    }

    .reasoning-content ul, .reasoning-content ol {
        margin-left: 1.5rem;
        margin-bottom: 0.5rem;
    }

    .reasoning-content a {
        color: #0066cc;
        text-decoration: none;
    }

    .reasoning-content a:hover {
        text-decoration: underline;
    }

    .reasoning-content blockquote {
        border-left: 3px solid #ccc;
        padding-left: 1rem;
        margin: 0.5rem 0;
        color: #666;
    }

    .reasoning-content code {
        background-color: #f5f5f5;
        padding: 0.125rem 0.25rem;
        border-radius: 3px;
        font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
    }

    .reasoning-content pre {
        background-color: #f5f5f5;
        padding: 0.75rem;
        border-radius: 5px;
        overflow-x: auto;
        margin: 0.5rem 0;
    }

    .reasoning-content pre code {
        background-color: transparent;
        padding: 0;
    }

    .markdown-preview{
        background-color: initial;
    }

    .markdown-editor-container .nav-tabs {
        border-bottom: 1px solid #dee2e6;
    }

    .markdown-editor-container .nav-link {
        color: #495057;
        background-color: transparent;
        border: 1px solid transparent;
        border-top-left-radius: .25rem;
        border-top-right-radius: .25rem;
        padding: .5rem 1rem;
        cursor: pointer;
    }

    .markdown-editor-container .nav-link.active {
        color: #495057;
        background-color: #fff;
        border-color: #dee2e6 #dee2e6 #fff;
    }

    .markdown-editor-container .nav-link:hover {
        border-color: #e9ecef #e9ecef #dee2e6;
    }

    .markdown-preview {
        background-color: #fff;
        overflow-y: auto;
        max-height: 300px;
    }

    .markdown-preview p:last-child {
        margin-bottom: 0;
    }

    .spice-up-container {
        border: 1px solid #e9ecef;
        border-radius: 0.375rem;
        padding: 0.75rem;
        background-color: #f8f9fa;
    }

    .spice-up-container .form-check-label {
        margin-left: 0.25rem;
        color: #495057;
    }

    .spice-up-container select {
        margin-top: 0.5rem;
    }
</style>

<DemoNotification ShowNotification="showDemoNotification" 
                  Message="@demoNotificationMessage" 
                  OnClose="HideDemoNotification" />