name: Deploy to Windows Server

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.x' # or the version you are using

      - name: Publish
        run: dotnet publish -c Release -o ./published

      - name: Compress published files
        run: tar -czf published.tar.gz -C ./published .

      - name: Copy compressed file via SCP
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $username = "${{ secrets.SERVER_USER }}"
          $password = "${{ secrets.SERVER_PASSWORD }}"
          $securePassword = ConvertTo-SecureString $password -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential($username, $securePassword)

          $sourcePath = "./published.tar.gz"
          $targetPath = "C:/Users/Jared/Documents/GitHub/MovieReviewApp"

          Write-Host "Starting SCP file transfer with compression..."
          scp -C -o StrictHostKeyChecking=no $sourcePath $username@${{ secrets.SERVER_HOST }}:$targetPath
          Write-Host "SCP file transfer completed."

      - name: Extract files on server and clean up
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $username = "${{ secrets.SERVER_USER }}"
          $password = "${{ secrets.SERVER_PASSWORD }}"
          $securePassword = ConvertTo-SecureString $password -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential($username, $securePassword)

          $sessionOptions = New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck

          # Establish SSH session and run commands with additional logging
          Write-Host "Establishing SSH session..."
          $sshCommand = @"
          tar -xzf C:/Users/Jared/Documents/GitHub/MovieReviewApp/published.tar.gz -C C:/Users/Jared/Documents/GitHub/MovieReviewApp/publish
          Remove-Item -Force C:/Users/Jared/Documents/GitHub/MovieReviewApp/published.tar.gz
          Stop-Process -Name "MovieReviewApp" -Force -ErrorAction SilentlyContinue
          Start-Process "C:/Users/Jared/Documents/GitHub/MovieReviewApp/publish/MovieReviewApp.exe"
          "@

          ssh $username@${{ secrets.SERVER_HOST }} -o StrictHostKeyChecking=no $sshCommand
          Write-Host "SSH session completed."
